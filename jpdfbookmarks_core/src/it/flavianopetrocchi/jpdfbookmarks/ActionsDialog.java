/*
 * ActionsDialog.java
 *
 * Copyright (c) 2010 Flaviano Petrocchi <flavianopetrocchi at gmail.com>.
 * All rights reserved.
 *
 * This file is part of JPdfBookmarks.
 *
 * JPdfBookmarks is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * JPdfBookmarks is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with JPdfBookmarks.  If not, see <http://www.gnu.org/licenses/>.
 */

package it.flavianopetrocchi.jpdfbookmarks;

import it.flavianopetrocchi.jpdfbookmarks.bookmark.Bookmark;
import it.flavianopetrocchi.jpdfbookmarks.bookmark.BookmarkType;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.DefaultListModel;

public class ActionsDialog extends javax.swing.JDialog {

    private Bookmark bookmark;
    private ArrayList<Bookmark> actions = null;
    private final Prefs userPrefs;
    private final boolean useThousandths;
    private ActionsListModel model;
    private boolean modified = false;

    /** Creates new form ActionsDialog */
    public ActionsDialog(java.awt.Frame parent, boolean modal, Bookmark b) {
        super(parent, modal);
        initComponents();
        setTitle(JPdfBookmarks.APP_NAME + " - " + b.getTitle());
        userPrefs = new Prefs();
        useThousandths = userPrefs.getUseThousandths();
        bookmark = b;
        actionsList.removeAll();
        actions = new ArrayList<Bookmark>();

        Bookmark b1 = new Bookmark();
        b1.cloneDestination(bookmark);
        actions.add(b1); //put a clone of the bookmark together with chained bookmarks in the array
        setActionsArrayRecursive(bookmark);
        model = new ActionsListModel();
        actionsList.setModel(model);
    }

    private void setActionsArrayRecursive(Bookmark b) {
        for (Bookmark chainedBookmark : b.getChainedBookmarks()) {
            Bookmark clone = new Bookmark();
            clone.cloneDestination(chainedBookmark);
            actions.add(clone);
            setActionsArrayRecursive(chainedBookmark);
        }
    }

    private class ActionsListModel extends DefaultListModel {

        public ActionsListModel() {
        }

        @Override
        public int getSize() {
            return actions.size();
        }

        @Override
        public Object getElementAt(int index) {
            return actions.get(index).getDescription(useThousandths);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        actionsList = new javax.swing.JList();
        btnUp = new javax.swing.JButton();
        btnDown = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("it/flavianopetrocchi/jpdfbookmarks/locales/localizedText"); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("ACTIONS_PANEL_TITLE"))); // NOI18N

        actionsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(actionsList);

        btnUp.setMnemonic(java.util.ResourceBundle.getBundle("it/flavianopetrocchi/jpdfbookmarks/locales/localizedText").getString("UP").charAt(0));
        btnUp.setText(bundle.getString("UP")); // NOI18N
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        btnDown.setMnemonic(java.util.ResourceBundle.getBundle("it/flavianopetrocchi/jpdfbookmarks/locales/localizedText").getString("DOWN").charAt(0));
        btnDown.setText(bundle.getString("DOWN")); // NOI18N
        btnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownActionPerformed(evt);
            }
        });

        btnDelete.setMnemonic(Res.mnemonicFromRes("DELETE_MNEMONIC"));
        btnDelete.setText(bundle.getString("ACTION_DELETE")); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDown)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addComponent(btnDelete)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnDown, btnUp});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUp)
                    .addComponent(btnDown)
                    .addComponent(btnDelete))
                .addContainerGap())
        );

        btnCancel.setMnemonic(java.util.ResourceBundle.getBundle("it/flavianopetrocchi/jpdfbookmarks/locales/localizedText").getString("CANCEL").charAt(0));
        btnCancel.setText(bundle.getString("CANCEL")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOk.setMnemonic(java.util.ResourceBundle.getBundle("it/flavianopetrocchi/jpdfbookmarks/locales/localizedText").getString("OK").charAt(0));
        btnOk.setText(bundle.getString("OK")); // NOI18N
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOk});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        int[] selections = actionsList.getSelectedIndices();
        if (selections.length == 0) {
            return;
        }
        
        for (int i = (selections.length - 1); i >= 0; i--) {
            actions.remove(selections[i]);
        }
        modified = true;
        actionsList.clearSelection();
        actionsList.repaint();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void moveSelectedElements(boolean down) {
        int[] selections = actionsList.getSelectedIndices();
        //Arrays.sort(selections);
        if (down) {
            for (int i = selections.length - 1; i >= 0; i--) {
                int indexOfSelected = selections[i];
                if (indexOfSelected < (actions.size() - 1)) {
                    //Bookmark selected = actions.get(indexOfSelected);
                    Bookmark afterSelected = actions.get(indexOfSelected + 1);
                    actions.remove(indexOfSelected + 1);
                    actions.add(indexOfSelected, afterSelected);
                    modified = true;
                } else {
                    return;
                }
            }
            for (int i = selections.length - 1; i >= 0; i--) {
                selections[i]++;
            }
        } else {
            for (int i = 0; i < selections.length; i++) {
                int indexOfSelected = selections[i];
                if (indexOfSelected > 0) {
                    Bookmark selected = actions.get(indexOfSelected);
                    actions.remove(indexOfSelected);
                    actions.add(indexOfSelected - 1, selected);
                    modified = true;
                } else {
                    return;
                }
            }
            for (int i = selections.length - 1; i >= 0; i--) {
                selections[i]--;
            }
        }

        actionsList.setSelectedIndices(selections);
    }

    public boolean isBookmarkModified() {
        return modified;
    }

    private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
        moveSelectedElements(true);
        actionsList.repaint();
    }//GEN-LAST:event_btnDownActionPerformed

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        moveSelectedElements(false);
        actionsList.repaint();
    }//GEN-LAST:event_btnUpActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed

        if (modified) {
            if (!actions.isEmpty()) {
                bookmark.cloneDestination(actions.get(0));
                actions.remove(0);
                bookmark.setChainedBookmarks(actions);
            } else {
                bookmark.setPageNumber(-1);
                bookmark.setType(BookmarkType.Unknown);
            }
        }
        dispose();
    }//GEN-LAST:event_btnOkActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList actionsList;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnUp;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
